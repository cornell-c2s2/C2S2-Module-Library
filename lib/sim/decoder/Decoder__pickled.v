//-------------------------------------------------------------------------
// Decoder.v
//-------------------------------------------------------------------------
// This file is generated by PyMTL SystemVerilog translation pass.

// PyMTL VerilogPlaceholder DecoderVRTL Definition
// Full name: DecoderVRTL__m_2__n_4
// At /home/vml37/c2s2/mxndecoder/rtl_design/sim/decoder/DecoderVRTL.py

//***********************************************************
// Pickled source file of placeholder DecoderVRTL__m_2__n_4
//***********************************************************

//-----------------------------------------------------------
// Dependency of placeholder DecoderVRTL
//-----------------------------------------------------------

`ifndef DECODERVRTL
`define DECODERVRTL

// The source code below are included because they are specified
// as the v_libs Verilog placeholder option of component DecoderVRTL__m_2__n_4.

// If you get a duplicated def error from files included below, please
// make sure they are included either through the v_libs option or the
// explicit `include statement in the Verilog source code -- if they
// appear in both then they will be included twice!


// End of all v_libs files for component DecoderVRTL__m_2__n_4

`line 1 "DecoderVRTL.v" 0
`ifndef PROJECT_DECODER_V
`define PROJECT_DECODER_V

//Registered Incrementer in Verilog


module DecoderVRTL
    #(  parameter m = 3, 
        parameter n = 1'b1 << m
    )(
        input  logic         enable, 
        input  logic [m-1:0] x, 
        output logic [n-1:0] y
    );

    ///////////////////////////////// design

    always @(*)begin
        if (!enable)begin
            y = {n{1'b0}};
        end
        else begin
            y = {{n-1{1'b0}},1'b1} << x; // << is a shift operator going left shift x positions
        end
    end
    /////////////////////////////////

endmodule

`endif




`endif /* DECODERVRTL */
//-----------------------------------------------------------
// Wrapper of placeholder DecoderVRTL__m_2__n_4
//-----------------------------------------------------------

`ifndef DECODERVRTL__M_2__N_4
`define DECODERVRTL__M_2__N_4

module Decoder
(
  input logic reset,
  input logic clk,
  input logic [1-1:0] enable ,
  input logic [2-1:0] x ,
  output logic [4-1:0] y 
);
  DecoderVRTL
  #(
    .m( 2 ),
    .n( 4 )
  ) v
  (
    .enable( enable ),
    .x( x ),
    .y( y )
  );
endmodule

`endif /* DECODERVRTL__M_2__N_4 */

